'\" crc32.n - Copyright (c) 2002 Pat Thoyts <patthoyts@users.sourceforge.net>
'\" 
'\" -------------------------------------------------------------------------
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" -------------------------------------------------------------------------
'\" RCS: @(#) $Id: crc32.n,v 1.3 2002/01/16 17:48:41 patthoyts Exp $
'\" 
.so man.macros
.TH "crc32" n 1.0 tcllib "Cyclic Redundancy Check (crc32)"
.BS
'\" Note: do not modify the .SH NAME line immediately below!
.SH NAME
::crc::crc32 \- Perform a 32bit Cyclic Redundancy Check
.SH "SYNOPSIS"
\fBpackage require Tcl 8.2\fR
.sp
\fBpackage require crc32 ?1.0?\fR
.sp
\fB::crc::crc32\fR \fI?-format string?\fR \fI?-seed value?\fR
\fI?-implementation procname?\fR \fImessage\fR
.sp
\fB::crc::crc32\fR \fI?-format string?\fR \fI?-seed value?\fR
\fI?-implementation procname?\fR \fI-filename file\fR
.sp
.BE
.SH "DESCRIPTION"
.PP
This package provides a Tcl-only implementation of the CRC-32 algorithm
based upon information provided at 
http://www.naaccr.org/standard/crc32/document.html
If the Trf package is available then the crc-zlib command is used
to perform the calculation.
.SH "COMMANDS"
.TP
\fB::crc::crc32\fR \fI?-format string?\fR \fI?-seed value?\fR
\fI?-implementation procname?\fR \fImessage\fR
.br
.TP
\fB::crc::crc32\fR \fI?-format string?\fR \fI?-seed value?\fR
\fI?-implementation procname?\fR \fI-filename file\fR
The command takes string data or a file name and returns
a checksum value calculated using the CRC-32 algorithm. The result is
formatted using the \fBformat\fR(n) specifier provided or as an unsigned
integer (%u) by default.
.SH "OPTIONS"
.TP
\fI-filename name\fR
Return a checksum for the file contents instead of for parameter data.
.TP
\fI-format string\fR
Return the checksum using an alternative format template.
.TP
\fI-seed value\fR
Select an alternative seed value for the CRC calculation. The default
is 0xffffffff. This can be useful for calculating the CRC for data
structures without first converting the whole structure into a
string. The CRC of the previous member can be used as the seed for
calculating the CRC of the next member.
.PP
Note that as the Trf crc-zlib cannot accept a seed value, use of this
option will force the use of the Tcl only implementation.
.TP
\fI-implementation procname\fR
This hook is provided to allow users to provide their own
implementation (perhaps a C compiled extension) or to explicitly
request use of the Tcl only implementation when Trf is installed (by
setting \fI-impl crc::Crc32_tcl\fR. The procedure specfied is called
with two parameters. The first is the data to be checksummed and the
second is the seed value. A 32bit integer is expected as the result.
.SH "EXAMPLES"
.PP
.CS
\fB% crc::crc32 "Hello, World!"\fR
3964322768
.CE
.PP
.CS
\fB% crc::crc32 -format 0x%X "Hello, World!"\fR
0xEC4AC3D0
.CE
.PP
.CS
\fB% crc::crc32 -file crc32.tcl\fR
483919716
.CE
.SH "SEE ALSO"
sum(n), cksum(n)

.SH "AUTHORS"
Wayland Augur, Pat Thoyts

.SH "KEYWORDS"
cksum, checksum, crc, crc32, cyclic redundancy check, data integrity, security
'\"
'\" Local Variables:
'\"   mode: nroff
'\" End:

