2005-02-14  Andreas Kupries  <andreas_kupries@users.sourceforge.net>

	* cfront.tcl: More fixes and 8.5 feature removal for the
	* cgen.tcl:   compiler packages.

2005-02-10  Andreas Kupries  <andreas_kupries@users.sourceforge.net>

	* cgen.tcl: Removed usage of catch 8.5 feature.
	* cfront.tcl: Fixed bad reference to file/scope local
	  command. Repaced usage 0f 8.5 feature 'lrepeat' with forward
	  compatibility command provided by 'struct::list'.

	* cgen.tcl: Moved the 'provide' definition to the front, so that
	* cfront.tcl: sak recognizes it and registers the provision of a
	* mimetypes.tcl: package when validating the module.

	* mimetypes.man: Basic documentation for the main recognizer
	  command.

	* mimetypes.test: Copied the filetype tests from fileutil over for
	  use by the mimetype command, and adapted the results. Only four
	  places where the result can be said to be bogus
	* mimetypes.tcl: Added code to remove duplicates from the output
	  of the low-level recognizer.
	* rtcore.tcl: Added 'resultv' command which does not stop
	  processing in the caller as well. Needed by our wrapper.

	* mimetypes.tcl: Moved code in 'magic.tcl' to
	* magic.tcl:    'mimetypes.tcl'. There is no need for a highlevel
	  package loading all the different recognizers. Each recognizer
	  is fully in its own package now. That makes the addition of more
	  recognizers easier, without causing the wrapper to load more and
	  more unneeded code. Things are large as they are, no need to
	  make them larger. Deleted "magic.tcl".

2005-02-09  Andreas Kupries  <andreas_kupries@users.sourceforge.net>

	* New module 'fumagic'. file(1) magic(5) based file type
	  recognition, in pure Tcl. Basic packages: runtime core,
	  mime-type engine, and a command wrapping the functionality for
	  easy access. The mime-type engine is not exactly so, it is
	  possible for to produce non-mime strings. We keep it for now
	  until the compiler has been put into this module as well.

	* rtcore.tcl:     Runtime core.
	* magic-mime.tcl: Mime engine
	* magic.tcl:      Wrapper.

	* Compiler packages now present as well
	
	* cgen.tcl:   Backend, tree-based code generator
	* cfront.tcl: Frontend, parsing of magic(5) files.
