# -*- tcl -*-
# fa_operations.test:  tests for the FA operations.
#
# Copyright (c) 2004 by Andreas Kupries <andreas_kupries@users.sourceforge.net>
#
# RCS: @(#) $Id: faop_regex.test,v 1.1 2004/04/04 19:51:24 andreas_kupries Exp $

# -------------------------------------------------------------------------

test faop-regex-1.0 {fromRegex, error} {
    catch {grammar::fa::op::fromRegex} res
    set res
} {wrong # args: should be "grammar::fa::op::fromRegex fa regex ?over?"}


test faop-regex-1.1 {fromRegex, error} {
    catch {grammar::fa::op::fromRegex a b c d} res
    set res
} {wrong # args: should be "grammar::fa::op::fromRegex fa regex ?over?"}


test faop-regex-1.2 {fromRegex, error} {
    catch {grammar::fa::op::fromRegex a b} res
    set res
} {Expected . ! ? * | &, or S, got "b"}


test faop-regex-1.3 {fromRegex, error} {
    catch {grammar::fa::op::fromRegex a {S b}} res
    set res
} {invalid command name "a"}


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

foreach {n over re fres} {
    00 {} {}
    {grammar::fa {} {}}

    01 {} {S x}
    {grammar::fa x {0 {1 0 {x 1}} 1 {0 1 {}}}}

    02 {} {. {S x} {S y}}
    {grammar::fa {x y} {0 {1 0 {x 1}} 1 {0 0 {{} 2}} 2 {0 0 {y 3}} 3 {0 1 {}}}}

    03 {} {| {S x} {S y}}
    {grammar::fa {x y} {0 {1 0 {{} {2 4}}} 1 {0 1 {}} 2 {0 0 {x 3}} 3 {0 0 {{} 1}} 4 {0 0 {y 5}} 5 {0 0 {{} 1}}}}

    04 {} {? {S x}}
    {grammar::fa x {0 {1 0 {{} {2 1}}} 1 {0 1 {}} 2 {0 0 {x 3}} 3 {0 0 {{} 1}}}}

    05 {} {* {S x}}
    {grammar::fa x {0 {1 1 {{} 1}} 1 {0 0 {x 2}} 2 {0 0 {{} 0}}}}

    06 {} {+ {S x}}
    {grammar::fa x {0 {1 0 {{} 2}} 1 {0 1 {{} 0}} 2 {0 0 {x 3}} 3 {0 0 {{} 1}}}}

    07 {} {! {S x}}
    {grammar::fa x {0 {1 0 {{} 2}} 1 {0 1 {}} 2 {0 0 {x 3 {} 1}} 3 {0 0 {x sink.0}} sink.0 {0 0 {x sink.0 {} 1}}}}

    08 {/ * { } a} {. {S /} {S *} {+ {! {. {S *} {S /}}}} {S *} {S /}}
    {grammar::fa {{ } a * /} {0 {1 0 {/ 1}} 1 {0 0 {{} 2}} 2 {0 0 {* 3}} 3 {0 0 {{} 4}} 4 {0 0 {{} 6}} 5 {0 0 {{} {4 12}}} 6 {0 0 {{} 8}} 7 {0 0 {{} 5}} 8 {0 0 {{ } sink.0 {} 7 a sink.0 * 9 / sink.0}} 9 {0 0 {{ } sink.0 {} {10 7} a sink.0 * sink.0}} 10 {0 0 {{ } sink.0 {} 7 a sink.0 * sink.0 / 11}} 11 {0 0 {{ } sink.0 a sink.0 * sink.0 / sink.0}} sink.0 {0 0 {{ } sink.0 {} 7 a sink.0 * sink.0 / sink.0}} 12 {0 0 {* 13}} 13 {0 0 {{} 14}} 14 {0 0 {/ 15}} 15 {0 1 {}}}}

    09 {} {. {S x}}
    {grammar::fa x {0 {1 0 {x 1}} 1 {0 1 {}}}}

    10 {} {| {S x}}
    {grammar::fa x {0 {1 0 {x 1}} 1 {0 1 {}}}}

    11 {} {& {S x}}
    {grammar::fa x {0 {1 0 {x 1}} 1 {0 1 {}}}}

    12 {} {& {. {S a} {* {S d}} {S c}} {. {S a} {* {S b}} {S c}}}
    {grammar::fa {a b c d} {0 {1 0 {{} 2}} 1 {0 1 {}} 2 {0 0 {a 3}} 3 {0 0 {c 4}} 4 {0 0 {{} 1}}}}
} {
    set key ${n}

    test faop-regex-2.$key {fromRegex} {
	grammar::fa a
	grammar::fa::op::fromRegex a $re $over
	set res [validate_serial $fres a]
	a destroy
	set res

    } ok

    test faop-regex-3.$key {fromRegex, as method} {
	grammar::fa a
	a fromRegex $re $over
	set res [validate_serial $fres a]
	a destroy
	set res
    } ok
}


# -------------------------------------------------------------------------
::tcltest::cleanupTests
