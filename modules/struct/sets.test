# Tests for the 'set' module in the 'struct' library. -*- tcl -*-
#
# This file contains a collection of tests for one or more of the Tcllib
# procedures.  Sourcing this file into Tcl runs the tests and
# generates output for errors.  No output means no errors were found.
#
# Copyright (c) 2004-2007 by Andreas Kupries
#
# RCS: @(#) $Id: sets.test,v 1.14 2007/01/21 22:15:59 andreas_kupries Exp $

#----------------------------------------------------------------------

source [file join \
	[file dirname [file dirname [file join [pwd] [info script]]]] \
	devtools testutilities.tcl]

testsNeedTcl     8.2
testsNeedTcltest 1.0

testing {
    if {[useTcllibC]} {
	useLocalKeep sets.tcl struct::set
    } else {
	useLocal     sets.tcl struct::set
    }
}

# -------------------------------------------------------------------------

struct::set::SwitchTo {}
foreach e [struct::set::KnownImpl] {
    if {[::struct::set::LoadAccel $e]} {
	switch -exact -- $e {
	    critcl {puts "> tcllibc based"}
	    tcl    {puts "> pure Tcl"}
	}
    }
}

# -------------------------------------------------------------------------

set sempty {}
set smultiples {a b c a d f a f c h j}
set sa {a b c d}
set sb {e f g h}
set sc {c d e f}
set sd {a b c d e f}     ; # a + c
set se {c d e f g h}     ; # b + c
set sf {a b c d e f g h} ; # a + b

interp alias {} setop {} ::struct::set

proc luniq {list} {
    set x() {} ; unset x()
    foreach l $list {set x($l) .}
    return [lsort [array names x]]
}

############################################################
## Iterate over all loaded implementations, activate
## them in turn, and run the tests for the active
## implementation. As a mini-benchmark we time how
## long each run takes.

#puts "\nset impl. performance"

set usec  0
set tests [file join [file dirname [info script]] sets.testsuite]

catch {memory validate on}

foreach impl [struct::set::Implementations] {
    struct::set::SwitchTo $impl

    # The global variable  'impl' is part of the public
    # API the testsuit (in set.testsuite) can expect
    # from the environment.

    switch -exact -- $impl {
	critcl {
	    proc tmWrong {m loarg n} {
		return [tcltest::wrongNumArgs "::struct::set $m" $loarg $n]
	    }

	    proc tmTooMany {m loarg} {
		return [tcltest::tooManyArgs "::struct::set $m" $loarg]
	    }

	    proc Nothing {} {
		return [tcltest::wrongNumArgs {::struct::set} {cmd ?arg ...?} 0]
	    }
	}
	tcl {
	    proc Nothing {} {
		return [tcltest::wrongNumArgs {::struct::set} {cmd args} 0]
	    }

	    proc tmWrong {m loarg n} {
		return [tcltest::wrongNumArgs "::struct::set::S_$m" $loarg $n]
	    }

	    proc tmTooMany {m loarg} {
		return [tcltest::tooManyArgs "::struct::set::S_$m" $loarg]
	    }
	}
    }

    set usec [time {source $tests} 1]

    #puts "$impl:\t$usec"
}

catch {memory validate off}

unset usec
unset tests

# Reset system to fully inactive state.

struct::set::SwitchTo {}

############################################################
testsuiteCleanup
