# rswitch.test - Copyright (C) 2001 Pat Thoyts <Pat.Thoyts@bigfoot.com>
#
# Provide a set of tests to excercise the control::rswitch command of
# tcllib.
#
# @(#)$Id: rswitch.test,v 1.3 2001/11/07 05:31:42 dgp Exp $

# Initialize the required packages
if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import -force ::tcltest::test ::tcltest::cleanupTests
}

package forget control
catch {namespace delete control}

# Direct loading of provide script -- support testing even
# when not installed.  And be sure we test the local copy
# and not some later version that may be installed.
source [file join [file dirname [info script]] control.tcl]
namespace import ::control::rswitch

# -------------------------------------------------------------------------

# Test simple numeric relational switching.
proc rsinteger {value} {
    rswitch {$value %s} {
        <5      {set result <5}
        ==5     {set result 5}
        >5      {set result >5}
        default {set result default}
    }
    return $result
}

test rswitch-1.1 {switch < 5} {
    catch {rsinteger 0} result
    set result
} {<5}

test rswitch-1.2 {switch == 5} {
    catch {rsinteger 5} result
    set result
} {5}

test rswitch-1.3 {switch > 5} {
    catch {rsinteger 10} result
    set result
} {>5}

test rswitch-1.4 {switch non numeric} {
    catch {rsinteger A} result
    set result
} {>5}

# -------------------------------------------------------------------------

proc rs:compare {lhs rhs} {
    rswitch {$lhs %s $rhs} {
        <   {return <}
        ==  {return ==}
        >   {return >}
    }
}

test rswitch-2.1 {switch string comparison} {
    catch {rs:compare "hello" "world"} result
    set result
} {<}

test rswitch-2.2 {switch string comparison} {
    catch {rs:compare "hello" "hello"} result
    set result
} {==}

test rswitch-2.3 {switch string comparison} {
    catch {rs:compare "hello" "all"} result
    set result
} {>}

# -------------------------------------------------------------------------
# Here are the test cases I used when developing [rswitch] to check on
# its errorInfo management.  They should be converted to proper tests,
# preferably checking ::errorInfo.  OK, I'll do the first one:

test rswitch-3.0 {rswitch argument checking} {
    list [catch {rswitch 1 \{} msg] $msg $::errorInfo
} {1 {unmatched open brace in list} {unmatched open brace in list
    while executing
"rswitch 1 \{"}}

#rswitch {1 %s} {
#        {{>[string length]}} {string length}
#    }} msg] $msg]
#}
#rswitch 1 foo
#rswitch {1 %s} {
#	{{&& ([string length a]
#	||
#	[string length]}} {string length}
#}
#rswitch {1 %s} {
#	{{&& ([string length a]
#	||
#	[string length])}} {string length}
#}
#rswitch {1 %s} {
#	{{&& ([string length]
#	||
#	[string length])}} {string length}
#}
#rswitch {1 %s 1} {
#    ==  {
#	    set a 1
#	    string length
#	    set b 2
#	}
#}
#rswitch {1 %s 1} {
#    ==  {
#	    set a 1
#	    expr {[string length]}
#	    set b 2
#	}
#}

# -------------------------------------------------------------------------
# Clean up the tests

::tcltest::cleanupTests
return

# Local variables:
#    mode: tcl
#    indent-tabs-mode: nil
# End:
